---
// src/components/ui/ProjectCard.astro
interface Props {
  proyecto: {
    id: number;
    title: string;
    location: string;
    description: string;
    category: string;
    images: Array<{
      src: string;
      alt: string;
    }>;
  };
}

const { proyecto } = Astro.props;
const mainImage = proyecto.images[0];
const hasMultipleImages = proyecto.images.length > 1;
---

<div 
  class="project-card bg-white rounded-xl shadow-md hover:shadow-lg transition-all duration-300 overflow-hidden group cursor-pointer"
  data-category={proyecto.category}
  data-project-id={proyecto.id}
>
  {/* Imagen del proyecto */}
  <div class="aspect-[4/3] overflow-hidden relative">
    <img 
      src={mainImage.src}
      alt={mainImage.alt}
      class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
      loading="lazy"
    />
    
    {/* Indicador de múltiples imágenes */}
    {hasMultipleImages && (
      <div class="absolute top-3 right-3 bg-black/60 backdrop-blur-sm text-white px-2 py-1 rounded-lg text-xs font-medium flex items-center gap-1">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
        </svg>
        {proyecto.images.length}
      </div>
    )}
    
    {/* Overlay con botón de ver más (visible en hover) */}
    <div class="absolute inset-0 bg-black/50 backdrop-blur-[1px] opacity-0 group-hover:opacity-100 transition-all duration-300 flex items-center justify-center">
      <button 
        class="bg-white text-neutralText px-4 py-2 rounded-lg font-medium hover:bg-gray-100 transition-colors duration-200 flex items-center gap-2 transform translate-y-2 group-hover:translate-y-0"
        aria-label={`Ver imágenes de ${proyecto.title}`}
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
        </svg>
        {hasMultipleImages ? 'Ver galería' : 'Ver imagen'}
      </button>
    </div>
  </div>
  
  {/* Contenido de la tarjeta */}
  <div class="p-6">
    <h3 class="text-xl font-semibold text-neutralText mb-2 group-hover:text-primary transition-colors duration-300">
      {proyecto.title}
    </h3>
    
    <p class="text-sm text-neutralText/70 mb-3 flex items-center gap-1">
      <svg class="w-4 h-4 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
      </svg>
      {proyecto.location}
    </p>
    
    <div class="flex items-start">
      <div class="w-1.5 h-1.5 bg-neutralText/50 rounded-full mt-2 mr-3 flex-shrink-0"></div>
      <p class="text-sm text-neutralText/80 leading-relaxed">
        {proyecto.description}
      </p>
    </div>
  </div>
</div>

<script>
  // Agregar event listener para abrir el visor cuando se hace clic en la tarjeta
  document.addEventListener('DOMContentLoaded', function() {
    const projectCards = document.querySelectorAll('.project-card');
    
    projectCards.forEach(card => {
      card.addEventListener('click', function(this: HTMLElement) {
        const projectId = this.getAttribute('data-project-id');
        if (projectId) {
          // Disparar evento personalizado para abrir el visor
          const event = new CustomEvent(`openImageViewer${projectId}`);
          document.dispatchEvent(event);
        }
      });
    });
  });
</script> 