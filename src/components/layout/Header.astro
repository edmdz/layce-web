---
// src/components/layout/Header.astro
import Logo from '../../assets/Layce_logo_horizontal_transparent.svg'; // El logo actual

// Definición de enlaces de navegación
const navLinks = [
    { href: "/", text: "Inicio" }, // Añadido Inicio para consistencia
    { href: "/servicios", text: "Servicios" },
    { href: "/proyectos", text: "Proyectos" },
    { href: "/nosotros", text: "Nosotros" },
    { href: "/metas-innovacion", text: "Metas e Innovación" },
    // { href: "/contacto", text: "Contacto" }, // El CTA puede cubrir esto
];

const ctaLink = { href: "/contacto", text: "Contáctanos" };

// Obtener la ruta actual para marcar el enlace activo
const currentPath = Astro.url.pathname;

// Función para determinar si un enlace está activo
// Maneja el caso exacto para "/" y el startsWith para otras secciones (ej. /proyectos/proyecto-a)
const isActive = (href: string) => {
    if (href === "/") {
        return currentPath === href;
    }
    return currentPath === href || currentPath.startsWith(href + '/');
};
---

<header class="bg-white shadow-md sticky top-0 z-50 border-b border-gray-200/75">
    <nav class="container mx-auto px-4 sm:px-6 lg:px-8 flex justify-between items-center" aria-label="Navegación Principal">
        <a href="/" class="flex items-center group" aria-label="Página de inicio de LAYCE Construcciones">
            <img 
                src={Logo.src} 
                alt="Logo LAYCE Construcciones" 
                class="h-20 md:h-24 lg:h-24 w-auto transition-transform duration-300 group-hover:scale-105"
            />
            {/* Considerar añadir un span con "LAYCE Construcciones" para SEO si el logo es solo isologo */}
            {/* <span class="sr-only">LAYCE Construcciones</span> */}
        </a>

        <div class="hidden md:flex space-x-6 lg:space-x-8 items-center">
            {navLinks.map(link => (
                <a 
                    href={link.href} 
                    class:list={[
                        "relative py-2 font-medium text-neutralText transition-colors duration-300 hover:text-primary",
                        "after:content-[''] after:absolute after:left-1/2 after:right-1/2 after:bottom-0.5",
                        "after:h-[2px] after:bg-primary after:transition-all after:duration-300 hover:after:left-0 hover:after:right-0",
                        { 
                            "text-primary after:left-0 after:right-0": isActive(link.href),
                            "text-neutralText": !isActive(link.href)
                        }
                    ]}
                    aria-current={isActive(link.href) ? "page" : undefined}
                >
                    {link.text}
                </a>
            ))}
            <a 
                href={ctaLink.href}
                class="px-5 py-2.5 rounded-md font-semibold bg-primary text-white transition-all duration-300 hover:bg-secondary hover:shadow-lg transform hover:-translate-y-0.5"
            >
                {ctaLink.text}
            </a>
        </div>

        <!-- Botón para menú móvil -->
        <div class="md:hidden">
            <button 
                id="mobile-menu-button" 
                class="text-neutralText focus:outline-none p-2 rounded-md hover:bg-lightGray focus:ring-2 focus:ring-primary" 
                aria-controls="mobile-menu" 
                aria-expanded="false" 
                aria-label="Abrir menú de navegación"
            >
                <svg id="menu-icon-open" class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path>
                </svg>
                <svg id="menu-icon-close" class="w-6 h-6 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>
    </nav>

    <!-- Menú móvil (oculto por defecto) -->
    <div 
        id="mobile-menu" 
        class="md:hidden bg-white shadow-lg overflow-hidden transition-all duration-300 ease-in-out opacity-0 max-h-0 invisible translate-y-[-10px]"
    >
        <div class="py-2"> {/* Añade un poco de padding vertical interno */}
            {navLinks.map(link => (
                <a 
                    href={link.href} 
                    class:list={[
                        "block px-5 py-3 text-base font-medium transition-colors duration-200 hover:bg-lightGray",
                        { 
                            "text-primary bg-lightGray": isActive(link.href),
                            "text-neutralText": !isActive(link.href) 
                        }
                    ]}
                    aria-current={isActive(link.href) ? "page" : undefined}
                >
                    {link.text}
                </a>
            ))}
            <a 
                href={ctaLink.href}
                class="block px-5 py-3 mt-2 mx-3 text-center text-base font-semibold bg-primary text-white rounded-md transition-colors duration-300 hover:bg-secondary"
            >
                {ctaLink.text}
            </a>
        </div>
    </div>
</header>

<script>
    const menuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const menuIconOpen = document.getElementById('menu-icon-open');
    const menuIconClose = document.getElementById('menu-icon-close');
    const mobileMenuButtonLabel = menuButton?.getAttribute('aria-label');

    if (menuButton && mobileMenu && menuIconOpen && menuIconClose) {
        menuButton.addEventListener('click', () => {
            const isExpanded = menuButton.getAttribute('aria-expanded') === 'true';
            menuButton.setAttribute('aria-expanded', String(!isExpanded));
            
            if (!isExpanded) { // Si estaba cerrado, ahora se abre
                mobileMenu.classList.remove('opacity-0', 'max-h-0', 'invisible', 'translate-y-[-10px]');
                mobileMenu.classList.add('opacity-100', 'max-h-screen', 'visible', 'translate-y-0');
                menuIconOpen.classList.add('hidden');
                menuIconClose.classList.remove('hidden');
                menuButton.setAttribute('aria-label', 'Cerrar menú de navegación');
            } else { // Si estaba abierto, ahora se cierra
                mobileMenu.classList.remove('opacity-100', 'max-h-screen', 'visible', 'translate-y-0');
                mobileMenu.classList.add('opacity-0', 'max-h-0', 'invisible', 'translate-y-[-10px]');
                menuIconOpen.classList.remove('hidden');
                menuIconClose.classList.add('hidden');
                if (mobileMenuButtonLabel) menuButton.setAttribute('aria-label', mobileMenuButtonLabel);
            }
        });
    }
